
# Package build system
[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"


# Project details
[project]
name = "keggtools"
description = "Enrichment analysis and visualisation toolkit for KEGG pathways"
requires-python = '>=3.10'
license = { file = "LICENSE" }

authors = [{ name = "harryhaller001", email = "harryhaller001@gmail.com" }]

maintainers = [{ name = "harryhaller001", email = "harryhaller001@gmail.com" }]

readme = { file = "README.md", content-type = "text/markdown" }

classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "Typing :: Typed",
]
dependencies = ["pydot", "requests", "scipy", "pydantic-xml", "pybiomart"]

dynamic = ["version"]


# Project urls
[project.urls]
Documentation = "https://keggtools.org/"
Source = "https://github.com/harryhaller001/keggtools"
Homepage = "https://github.com/harryhaller001/keggtools"


# Optional dependencies for testing and docs
[project.optional-dependencies]
test = [
    "pytest",
    "coverage",
    "mypy",
    "types-requests",
    "responses",
    "pandas",
    "isort",
    "ruff",
]

doc = ["Sphinx", "furo"]


# Mypy config
# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true


# Ignore libs which are not PEP 561 compliant
[[tool.mypy.overrides]]
module = ["pandas", "setuptools", "scipy", "pydot", "pybiomart"]
ignore_missing_imports = true


[tool.ruff]
line-length = 120
extend-include = ["*.ipynb"]

format.docstring-code-format = true

lint.select = [
    "B",      # flake8-bugbear
    "BLE",    # flake8-blind-except
    "C4",     # flake8-comprehensions
    "D",      # pydocstyle
    "E",      # Error detected by Pycodestyle
    "F",      # Errors detected by Pyflakes
    "I",      # isort
    "RUF100", # Report unused noqa directives
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
    "W",      # Warning detected by Pycodestyle
]
lint.ignore = [
    "B008", # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D105", # __magic__ methods are often self-explanatory, allow missing docstrings
    "D107", # Missing docstring in __init__
    # Disable one in each pair of mutually incompatible rules
    "D203", # We don’t want a blank line before a class docstring
    "D213", # <> We want docstrings to start immediately after the opening triple quote
    "D400", # first line should end with a period [Bug: doesn’t work with single-line docstrings]
    "D401", # First line should be in imperative mood; try rephrasing
    "E501", # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E731", # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E741", # allow I, O, l as variable names -> I is the identity matrix
]
lint.per-file-ignores."*/__init__.py" = ["F401"]
lint.per-file-ignores."docs/*" = ["I"]
lint.per-file-ignores."tests/*" = ["D"]
lint.pydocstyle.convention = "google"


# Pytest config
[tool.pytest.ini_options]
minversion = "7.0"

log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_level = "DEBUG"
log_cli = true

python_files = "test_*.py"
testpaths = ["test"]


# Coverage config
[tool.coverage.run]
source = ["keggtools"]
omit = ["*/test/*"]


# Flit sdist config
# https://flit.pypa.io/en/latest/pyproject_toml.html#sdist-section
[tool.flit.sdist]
include = ["keggtools/"]
exclude = ["docs", "test", "reproducibility"]
