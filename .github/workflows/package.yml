
name: Package testing

on:
    workflow_dispatch:
    push:
        branches:
        -   main

    # Run action when pull request is opened
    pull_request:
        types: [opened, reopened, synchronize]


# Jobs
jobs:

    build:

        # Set ubuntu version by matrix strategy
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash -e {0}

        # Matrix testing
        strategy:
            matrix:
                # Check for all python versions >=3.10
                include:
                    -   os: ubuntu-latest
                        python-version: "3.10"
                    -   os: ubuntu-latest
                        python-version: "3.11"
                    -   os: ubuntu-latest
                        python-version: "3.12"
                    -   os: ubuntu-latest
                        python-version: "3.12"
                        pip-flags: "--pre"
                        name: PRE-RELEASE DEPENDENCIES

        name: ${{ matrix.name }} Python ${{ matrix.python }}
        env:
            OS: ${{ matrix.os }}
            PYTHON: ${{ matrix.python }}

        steps:
        -   uses: actions/checkout@v4
        -   name: Set up Python ${{ matrix.python }}
            uses: actions/setup-python@v5
            with:
                python-version: ${{ matrix.python }}
                cache: "pip"
                cache-dependency-path: "**/pyproject.toml"

        # Install dependencies from freeze
        -   name: Install dependencies
            run: |
                sudo apt-get install -y graphviz pandoc
                python -m pip install --upgrade pip wheel
                pip install ${{ matrix.pip-flags }} ".[test,docs]"


        # Linting package
        -   name: Lint
            run: |
                ruff check keggtools/*.py
                ruff check test/*.py


        # Install package from setup.py and static code analysis
        -   name: Static code analysis
            run: |
                mypy ./test
                mypy ./keggtools


        # Running unittest
        -   name: Test
            env:
                MPLBACKEND: agg
                PLATFORM: ${{ matrix.os }}
                DISPLAY: :42
            run: |
                coverage run -m pytest -v --color=yes

        # generation of coverage report
        -   name: Report coverage
            run: |
                coverage report

        # Upload to codecov
        -   name: Upload coverage reports to Codecov
            uses: codecov/codecov-action@v4
            with:
                token: ${{ secrets.CODECOV_TOKEN }}


        # Build wheel and egg with flit backend
        -   name: Build package
            run: |
                flit build --setup-py
                twine check --strict ./dist/*
                flit install


        # Test and build the docs for keggtools
        -   name: test and build docs
            run: |
                mypy ./docs/conf.py
                ruff check ./docs/conf.py
                python -m sphinx -M doctest ./docs ./docs/_build
                python -m  sphinx -M coverage ./docs ./docs/_build
                python -m  sphinx -M html ./docs ./docs/_build

